generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/client"  // Generate in service-specific folder
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id                     String       @id @default(uuid())
  tenantName             String       @map("tenant_name") @db.VarChar(255)
  adminId                String       @unique @db.VarChar(50)
  subdomain              String       @unique @db.VarChar(50)
  schoolAddress          String       @map("school_address") @db.Text
  schoolType             SchoolType   @map("school_type")
  estimatedStudentCount  Int?         @map("estimated_student_count")
  isActive               Boolean      @default(true) @map("is_active")
  createdAt              DateTime     @default(now()) @map("created_at")
  updatedAt              DateTime     @updatedAt @map("updated_at")

  // Relations
  customDomains          CustomDomain[]

  @@map("tenants")
}

model CustomDomain {
  id         String      @id @default(uuid())
  tenantId   String      @map("tenant_id")
  domain     String      @unique @db.VarChar(255)
  isVerified Boolean     @default(false) @map("is_verified")
  isPrimary  Boolean     @default(false) @map("is_primary")
  sslStatus  SslStatus   @map("ssl_status")
  createdAt  DateTime    @default(now()) @map("created_at")

  // Relations
  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@map("custom_domains")
}

// Enums
enum SchoolType {
  primary
  secondary
  higher_secondary
  mixed
}

enum SslStatus {
  pending
  active
  failed
}
